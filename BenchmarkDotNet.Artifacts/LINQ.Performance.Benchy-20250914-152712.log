// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1/" /p:OutDir="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\bin\Release\net8.0/" /p:OutputPath="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\bin\Release\net8.0/" /p:PublishDir="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\publish/" in C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1
// command took 1.17 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:ArtifactsPath="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1/" /p:OutDir="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\bin\Release\net8.0/" /p:OutputPath="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\bin\Release\net8.0/" /p:PublishDir="C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\publish/" --output "C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\bin\Release\net8.0/" in C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1
// command took 4.85 sec and exited with 0
// ***** Done, took 00:00:06 (6.08 sec)   *****
// Found 1 benchmarks:
//   Benchy.OldGetSmallestAndBiggestId: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: Alto desempenho)
// **************************
// Benchmark: Benchy.OldGetSmallestAndBiggestId: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet Teste-DefaultJob-1.dll --anonymousPipes 1584 1592 --benchmarkName LINQ.Performance.Benchy.OldGetSmallestAndBiggestId --job Default --benchmarkId 0 in C:\Users\Nicolas\Desktop\c#\LINQ\Teste\bin\Release\net8.0\Teste-DefaultJob-1\bin\Release\net8.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.15.2
// Runtime=.NET 8.0.18 (8.0.1825.31117), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 105700.00 ns, 105.7000 us/op
WorkloadJitting  1: 1 op, 627000.00 ns, 627.0000 us/op

OverheadJitting  2: 16 op, 154100.00 ns, 9.6313 us/op
WorkloadJitting  2: 16 op, 195400.00 ns, 12.2125 us/op

WorkloadPilot    1: 16 op, 50000.00 ns, 3.1250 us/op
WorkloadPilot    2: 32 op, 90000.00 ns, 2.8125 us/op
WorkloadPilot    3: 64 op, 210800.00 ns, 3.2938 us/op
WorkloadPilot    4: 128 op, 357300.00 ns, 2.7914 us/op
WorkloadPilot    5: 256 op, 709300.00 ns, 2.7707 us/op
WorkloadPilot    6: 512 op, 1405700.00 ns, 2.7455 us/op
WorkloadPilot    7: 1024 op, 2972900.00 ns, 2.9032 us/op
WorkloadPilot    8: 2048 op, 5637300.00 ns, 2.7526 us/op
WorkloadPilot    9: 4096 op, 11357900.00 ns, 2.7729 us/op
WorkloadPilot   10: 8192 op, 22491700.00 ns, 2.7456 us/op
WorkloadPilot   11: 16384 op, 45651400.00 ns, 2.7863 us/op
WorkloadPilot   12: 32768 op, 56603300.00 ns, 1.7274 us/op
WorkloadPilot   13: 65536 op, 75206400.00 ns, 1.1476 us/op
WorkloadPilot   14: 131072 op, 149596700.00 ns, 1.1413 us/op
WorkloadPilot   15: 262144 op, 298243400.00 ns, 1.1377 us/op
WorkloadPilot   16: 524288 op, 594186900.00 ns, 1.1333 us/op

OverheadWarmup   1: 524288 op, 1112900.00 ns, 2.1227 ns/op
OverheadWarmup   2: 524288 op, 1105200.00 ns, 2.1080 ns/op
OverheadWarmup   3: 524288 op, 1101300.00 ns, 2.1006 ns/op
OverheadWarmup   4: 524288 op, 1104700.00 ns, 2.1070 ns/op
OverheadWarmup   5: 524288 op, 1162500.00 ns, 2.2173 ns/op
OverheadWarmup   6: 524288 op, 1127000.00 ns, 2.1496 ns/op
OverheadWarmup   7: 524288 op, 1109800.00 ns, 2.1168 ns/op
OverheadWarmup   8: 524288 op, 1105300.00 ns, 2.1082 ns/op
OverheadWarmup   9: 524288 op, 1101700.00 ns, 2.1013 ns/op
OverheadWarmup  10: 524288 op, 1296800.00 ns, 2.4734 ns/op

OverheadActual   1: 524288 op, 1405200.00 ns, 2.6802 ns/op
OverheadActual   2: 524288 op, 1157700.00 ns, 2.2081 ns/op
OverheadActual   3: 524288 op, 1104600.00 ns, 2.1069 ns/op
OverheadActual   4: 524288 op, 1141900.00 ns, 2.1780 ns/op
OverheadActual   5: 524288 op, 1430100.00 ns, 2.7277 ns/op
OverheadActual   6: 524288 op, 1123800.00 ns, 2.1435 ns/op
OverheadActual   7: 524288 op, 1110400.00 ns, 2.1179 ns/op
OverheadActual   8: 524288 op, 1123900.00 ns, 2.1437 ns/op
OverheadActual   9: 524288 op, 1124600.00 ns, 2.1450 ns/op
OverheadActual  10: 524288 op, 1393000.00 ns, 2.6569 ns/op
OverheadActual  11: 524288 op, 1103000.00 ns, 2.1038 ns/op
OverheadActual  12: 524288 op, 1104500.00 ns, 2.1067 ns/op
OverheadActual  13: 524288 op, 1112300.00 ns, 2.1215 ns/op
OverheadActual  14: 524288 op, 1124700.00 ns, 2.1452 ns/op
OverheadActual  15: 524288 op, 1138100.00 ns, 2.1708 ns/op

OverheadWarmup   1: 524288 op, 1143400.00 ns, 2.1809 ns/op
OverheadWarmup   2: 524288 op, 1118600.00 ns, 2.1336 ns/op
OverheadWarmup   3: 524288 op, 1132500.00 ns, 2.1601 ns/op
OverheadWarmup   4: 524288 op, 1169700.00 ns, 2.2310 ns/op
OverheadWarmup   5: 524288 op, 1153000.00 ns, 2.1992 ns/op
OverheadWarmup   6: 524288 op, 1140000.00 ns, 2.1744 ns/op
OverheadWarmup   7: 524288 op, 1242000.00 ns, 2.3689 ns/op
OverheadWarmup   8: 524288 op, 1121300.00 ns, 2.1387 ns/op

// BeforeActualRun
WorkloadActual   1: 524288 op, 603483700.00 ns, 1.1511 us/op
WorkloadActual   2: 524288 op, 601890900.00 ns, 1.1480 us/op
WorkloadActual   3: 524288 op, 598630000.00 ns, 1.1418 us/op
WorkloadActual   4: 524288 op, 596349600.00 ns, 1.1374 us/op
WorkloadActual   5: 524288 op, 594079800.00 ns, 1.1331 us/op
WorkloadActual   6: 524288 op, 594784200.00 ns, 1.1345 us/op
WorkloadActual   7: 524288 op, 593022300.00 ns, 1.1311 us/op
WorkloadActual   8: 524288 op, 596534100.00 ns, 1.1378 us/op
WorkloadActual   9: 524288 op, 595748000.00 ns, 1.1363 us/op
WorkloadActual  10: 524288 op, 595732400.00 ns, 1.1363 us/op
WorkloadActual  11: 524288 op, 595964900.00 ns, 1.1367 us/op
WorkloadActual  12: 524288 op, 595139300.00 ns, 1.1351 us/op
WorkloadActual  13: 524288 op, 595468500.00 ns, 1.1358 us/op
WorkloadActual  14: 524288 op, 596032300.00 ns, 1.1368 us/op
WorkloadActual  15: 524288 op, 594180900.00 ns, 1.1333 us/op

// AfterActualRun
WorkloadResult   1: 524288 op, 597505400.00 ns, 1.1397 us/op
WorkloadResult   2: 524288 op, 595225000.00 ns, 1.1353 us/op
WorkloadResult   3: 524288 op, 592955200.00 ns, 1.1310 us/op
WorkloadResult   4: 524288 op, 593659600.00 ns, 1.1323 us/op
WorkloadResult   5: 524288 op, 591897700.00 ns, 1.1290 us/op
WorkloadResult   6: 524288 op, 595409500.00 ns, 1.1357 us/op
WorkloadResult   7: 524288 op, 594623400.00 ns, 1.1342 us/op
WorkloadResult   8: 524288 op, 594607800.00 ns, 1.1341 us/op
WorkloadResult   9: 524288 op, 594840300.00 ns, 1.1346 us/op
WorkloadResult  10: 524288 op, 594014700.00 ns, 1.1330 us/op
WorkloadResult  11: 524288 op, 594343900.00 ns, 1.1336 us/op
WorkloadResult  12: 524288 op, 594907700.00 ns, 1.1347 us/op
WorkloadResult  13: 524288 op, 593056300.00 ns, 1.1312 us/op

// AfterAll
// Benchmark Process 13352 has exited with code 0.

Mean = 1.134 μs, StdErr = 0.001 μs (0.06%), N = 13, StdDev = 0.003 μs
Min = 1.129 μs, Q1 = 1.132 μs, Median = 1.134 μs, Q3 = 1.135 μs, Max = 1.140 μs
IQR = 0.002 μs, LowerFence = 1.129 μs, UpperFence = 1.138 μs
ConfidenceInterval = [1.131 μs; 1.137 μs] (CI 99.9%), Margin = 0.003 μs (0.28% of Mean)
Skewness = 0.32, Kurtosis = 3.05, MValue = 2

// ** Remained 0 (0,0%) benchmark(s) to run. Estimated finish 2025-09-14 15:27 (0h 0m from now) **
Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: Alto desempenho)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\LINQ.Performance.Benchy-report.csv
  BenchmarkDotNet.Artifacts\results\LINQ.Performance.Benchy-report-github.md
  BenchmarkDotNet.Artifacts\results\LINQ.Performance.Benchy-report.html

// * Detailed results *
Benchy.OldGetSmallestAndBiggestId: DefaultJob
Runtime = .NET 8.0.18 (8.0.1825.31117), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.134 μs, StdErr = 0.001 μs (0.06%), N = 13, StdDev = 0.003 μs
Min = 1.129 μs, Q1 = 1.132 μs, Median = 1.134 μs, Q3 = 1.135 μs, Max = 1.140 μs
IQR = 0.002 μs, LowerFence = 1.129 μs, UpperFence = 1.138 μs
ConfidenceInterval = [1.131 μs; 1.137 μs] (CI 99.9%), Margin = 0.003 μs (0.28% of Mean)
Skewness = 0.32, Kurtosis = 3.05, MValue = 2
-------------------- Histogram --------------------
[1.127 μs ; 1.141 μs) | @@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet v0.15.2, Windows 10 (10.0.19045.5737/22H2/2022Update)
Intel Core i5-10400 CPU 2.90GHz, 1 CPU, 12 logical and 6 physical cores
.NET SDK 8.0.412
  [Host]     : .NET 8.0.18 (8.0.1825.31117), X64 RyuJIT AVX2
  DefaultJob : .NET 8.0.18 (8.0.1825.31117), X64 RyuJIT AVX2


| Method                     | Mean     | Error     | StdDev    |
|--------------------------- |---------:|----------:|----------:|
| OldGetSmallestAndBiggestId | 1.134 μs | 0.0031 μs | 0.0026 μs |

// * Hints *
Outliers
  Benchy.OldGetSmallestAndBiggestId: Default -> 2 outliers were removed (1.15 μs, 1.15 μs)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 μs   : 1 Microsecond (0.000001 sec)

// ***** BenchmarkRunner: End *****
Run time: 00:00:10 (10.59 sec), executed benchmarks: 1

Global total time: 00:00:16 (16.91 sec), executed benchmarks: 1
// * Artifacts cleanup *
Artifacts cleanup is finished
